<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on Fuloido&#39;s Blog</title>
    <link>http://localhost:1313/tags/emacs/</link>
    <description>Recent content in Emacs on Fuloido&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>© Fuloido</copyright>
    <lastBuildDate>Sat, 15 Mar 2025 17:59:36 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[譯] 高效文本編輯的七個習慣</title>
      <link>http://localhost:1313/posts/seven-habits-of-effective-text-editing/</link>
      <pubDate>Sat, 15 Mar 2025 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/seven-habits-of-effective-text-editing/</guid>
      <description>&lt;p&gt;如果你花費大量時間輸入純文本、編寫程序或HTML，那麽通過使用一款優秀的編輯器並高效地使用它，你可以節省大量時間。本文將提供一些指導和建議，幫助你更快地完成工作並減少錯誤。&lt;/p&gt;&#xA;&lt;p&gt;這里將使用開源文本編輯器Vim（Vi IMproved）來展示高效編輯的理念，但這些理念同樣適用於其他編輯器。 &lt;span class=&#34;underline&#34;&gt;選擇一款合適的編輯器&lt;/span&gt; 實際上是實現高效編輯的第一步。關於哪款編輯器最適合你的討論會占用太多篇幅，因此這里不做展開。如果你不知道該使用哪款編輯器，或者對當前使用的編輯器不滿意，不妨試試Vim &lt;em&gt;（譯者：不妨試試 &lt;strong&gt;Emacs&lt;/strong&gt; ）&lt;/em&gt; ；你不會失望的。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;原文標題：Seven habits of effective text editing&lt;/p&gt;&#xA;&lt;p&gt;原文鏈接：&lt;a href=&#34;https://www.moolenaar.net/habits.html&#34;&gt;https://www.moolenaar.net/habits.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;原文作者：&lt;a href=&#34;https://www.moolenaar.net&#34;&gt;Bram Moolenaar&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;part-1-單文件編輯&#34;&gt;Part 1: 單文件編輯&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-dot-快速移動&#34;&gt;1. 快速移動&lt;/h3&gt;&#xA;&lt;p&gt;在編輯文本時，大多數時間都花在 &lt;strong&gt;閱讀&lt;/strong&gt; 、 &lt;strong&gt;檢查錯誤&lt;/strong&gt; 以及 &lt;strong&gt;尋找需要編輯的位置&lt;/strong&gt; 上，而不是插入或修改新文本。由於在文本中導航是非常頻繁的操作，因此你應該學會如何 &lt;span class=&#34;underline&#34;&gt;快速移動&lt;/span&gt; 。&lt;/p&gt;&#xA;&lt;p&gt;很多時候，你會想要搜索一些你知道存在的文本，或者查看某個單詞或短語出現的所有行。你可以簡單地使用搜索命令 &lt;code&gt;/pattern&lt;/code&gt; 來查找文本，但還有更聰明的方法：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果你看到一個特定的單詞，並想搜索該單詞的其他出現位置，可以使用 &lt;code&gt;*&lt;/code&gt; 命令。它會從光標下提取單詞並搜索下一個匹配項。&lt;/li&gt;&#xA;&lt;li&gt;如果你設置了 &lt;code&gt;incsearch&lt;/code&gt; 選項，Vim 會在你輸入模式時顯示第一個匹配項。這可以快速發現模式中的 &lt;span class=&#34;underline&#34;&gt;拼寫錯誤&lt;/span&gt; 。&lt;/li&gt;&#xA;&lt;li&gt;如果你設置了 &lt;code&gt;hlsearch&lt;/code&gt; 選項，Vim 會用黃色背景高亮顯示所有匹配項。這可以快速預覽搜索命令會帶你到哪里。在程序代碼中，它可以顯示變量的 &lt;span class=&#34;underline&#34;&gt;使用位置&lt;/span&gt; 。你甚至不需要移動光標就能看到匹配項。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在 &lt;em&gt;結構化文本&lt;/em&gt; 中，還有更多快速移動的可能性。Vim 為 C 語言（以及類似語言如 C++ 和 Java）提供了特定的命令：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;%&lt;/code&gt; 可以從一個開括號跳轉到其匹配的閉括號，或者從 &lt;code&gt;#if&lt;/code&gt; 跳轉到匹配的 &lt;code&gt;#endif&lt;/code&gt; 。實際上， &lt;code&gt;%&lt;/code&gt; 可以跳轉到許多不同的匹配項。它對於檢查 &lt;code&gt;()&lt;/code&gt; 和 &lt;code&gt;{}&lt;/code&gt; 結構是否平衡非常有用。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;[{&lt;/code&gt; 可以跳回到當前代碼塊開頭的 &lt;code&gt;{&lt;/code&gt; 。&lt;/li&gt;&#xA;&lt;li&gt;使用 &lt;code&gt;gd&lt;/code&gt; 可以從變量的使用位置跳轉到其局部聲明。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;當然，還有很多其他命令。關鍵在於你需要熟悉這些命令。你可能會反對說，你不可能學會所有這些命令——有數百種不同的移動命令，有些簡單，有些非常巧妙——而且需要數周的訓練才能掌握它們。其實你不需要 &lt;strong&gt;全部學會&lt;/strong&gt; ；相反，你應該意識到自己的編輯方式，並只學習那些 &lt;span class=&#34;underline&#34;&gt;能讓你的編輯更高效的命令&lt;/span&gt; 。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何制作 X-Face 风格头像</title>
      <link>http://localhost:1313/posts/how-to-make-and-use-xface/</link>
      <pubDate>Mon, 17 Feb 2025 01:23:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/how-to-make-and-use-xface/</guid>
      <description>&lt;p&gt;一开始是在 &lt;em&gt;emacs-china&lt;/em&gt; 上水论坛时，经常能看到像素极低、纯黑白的头像、却又很带感的头像。后来&lt;a href=&#34;https:emacs-china.org/t/topic/3118&#34;&gt;发现&lt;/a&gt;原来叫 &lt;code&gt;X-face&lt;/code&gt; ，大概是邮件／新闻组时代流行的头像。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;翻到 &lt;a href=&#34;https://blog.csdn.net/lujun9972/article/details/46002803&#34;&gt;DarkSun转的一篇老文章&lt;/a&gt;，提到了 &lt;a href=&#34;https://en.wikipedia.org/wiki/X-Face&#34;&gt;X-Face&lt;/a&gt; 这个邮件／新闻组时代很流行的东西。就和现在的 Gravatar 差不多。甚至以前的 IRC 也能显示 X-face 头像。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;X-face&lt;/code&gt; 是邮件 header 部分嵌入的一段代码，在读入邮件时转换为 &lt;em&gt;48x48&lt;/em&gt; 的 bitmap。可以通过 &lt;a href=&#34;https://www.dairiki.org/xface/xface.php&#34;&gt;Online X-Face Converter&lt;/a&gt; 直接转换。然而，如果你的图片是彩色的、分辨率过高，直接转换的效果很不好。&lt;/p&gt;&#xA;&lt;p&gt;这里参考了 &lt;a href=&#34;https://emacs-china.org/t/x-face/28144&#34;&gt;emacs-china 上的一个教程&lt;/a&gt;，分享一下作为 &lt;code&gt;gimp&lt;/code&gt; 苦手的制作过程。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;图像-&amp;gt;模式-&amp;gt;灰度：将彩色的图片去色便于后续通过 &lt;strong&gt;阈值&lt;/strong&gt; 分割像素，当然最好用本来就是黑白的图片。&lt;/li&gt;&#xA;&lt;li&gt;颜色-&amp;gt;阈值：这一步将黑白像素分离，只要有线条即可，后续通过滤镜加粗线条。这里建议可以分图层处理，比如说眼睛部分和头发部分，往往当眼睛部分已经全为黑色像素时头发的线条还未区分。&lt;/li&gt;&#xA;&lt;li&gt;图像-&amp;gt;模式-&amp;gt;索引：将图片变为 &lt;em&gt;black and white pattle(1bit)&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;滤镜-&amp;gt;常规-&amp;gt;腐蚀：将线条加粗，一般需要多次使用这个滤镜。&lt;/li&gt;&#xA;&lt;li&gt;图像-&amp;gt;缩放：缩放为 48x48 ，插值方法一般不限。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;据 &lt;a href=&#34;https://emacs-china.org/t/x-face/28144/2&#34;&gt;LdBeth&lt;/a&gt;，x-face 没有确切的解码标准，甚至因为作者技术问题和导致仿造实现时出了偏差，有些实现是相互不兼容的，现在一般用 compface 这个具体实现。这里直接使用 &lt;em&gt;compface&lt;/em&gt; 提供的 &lt;code&gt;xbm2xface&lt;/code&gt; 脚本即可。或者直接使用 &lt;a href=&#34;https://www.dairiki.org/xface/xface.php&#34;&gt;Online X-Face Converter&lt;/a&gt; encode一下。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为-wanderlust-设置-x-face-邮件头&#34;&gt;为 WanderLust 设置 X-Face 邮件头&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;WanderLust&lt;/em&gt; 自动读取 &lt;code&gt;~/.xface&lt;/code&gt; ，如果需要显示 X-Face 则需要额外的包，参考了 &lt;code&gt;doom emacs&lt;/code&gt; ，添加：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; Use x-face only when compface installed&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (when (modulep! +xface)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;autoload&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-face-decode-message-header&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x-face-e21&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (setq wl-highlight-x-face-function &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-face-decode-message-header&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;顺便一提， &lt;code&gt;Homebrew&lt;/code&gt; 目前不提供 &lt;code&gt;compface&lt;/code&gt; 这个包，这里参考 &lt;a href=&#34;https://www.linuxfromscratch.org/blfs/view/git/general/compface.html&#34;&gt;Linux® From Scratch&lt;/a&gt; 手动构建了这个程序。你可能需要：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
