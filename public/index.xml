<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fuloido&#39;s Blog</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Fuloido&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <copyright>© Fuloido</copyright>
    <lastBuildDate>Sat, 15 Mar 2025 15:14:25 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A64指令集編碼</title>
      <link>http://localhost:1313/posts/a64-instruction-encoding/</link>
      <pubDate>Sat, 15 Mar 2025 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/a64-instruction-encoding/</guid>
      <description>&lt;p&gt;最近在做 Aarch64 架構的虛擬機，在此分享一下 A64 的指令編解碼。&lt;/p&gt;&#xA;&lt;p&gt;儘管 A64/A32 指令集是由若干 &lt;em&gt;FEAT_XXX&lt;/em&gt; 組成的，但 Arm 還是將其分為了若干類以便於拓展和編解碼。大概可以分為：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;基本指令集&lt;/li&gt;&#xA;&lt;li&gt;浮點數和 SIMD 指令集&lt;/li&gt;&#xA;&lt;li&gt;向量指令集&lt;/li&gt;&#xA;&lt;li&gt;矩陣指令集&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在編解碼時由指令了 &lt;strong&gt;[25:28]&lt;/strong&gt; 位決定其分類，具體的分類見下表：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Instr[28:25]&lt;/th&gt;&#xA;          &lt;th&gt;對應指令集分類&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0b0000 (Instr[31] = 0)&lt;/td&gt;&#xA;          &lt;td&gt;保留&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0b0000 (Instr[31] = 1)&lt;/td&gt;&#xA;          &lt;td&gt;矩陣指令集 (SME)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0b0010&lt;/td&gt;&#xA;          &lt;td&gt;向量指令集 (SVE)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0b100x&lt;/td&gt;&#xA;          &lt;td&gt;數據通路 (Data Processing)：立即數類&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0b101x&lt;/td&gt;&#xA;          &lt;td&gt;分支指令、異常生成 (Exception Generating)、系統指令 (System instruction)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0bx101&lt;/td&gt;&#xA;          &lt;td&gt;數據通路 (Data Processing)：寄存器類&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0bx111&lt;/td&gt;&#xA;          &lt;td&gt;數據通路 (Data Processing)：浮點數以及 SIMD 指令集&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;0bx1x0&lt;/td&gt;&#xA;          &lt;td&gt;內存加載和儲存 (Loads and Store)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;下面簡單分享一下基本指令集和浮點、SIMD 指令集的編解碼規則，後續有機會分享一下 SVE 以及 SME 指令集的編解碼。&lt;/p&gt;&#xA;&lt;h2 id=&#34;數據通路-寄存器類&#34;&gt;數據通路 - 寄存器類&lt;/h2&gt;&#xA;&lt;p&gt;這一類指令類型主要涵蓋了：&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何制作 X-Face 风格头像</title>
      <link>http://localhost:1313/posts/how-to-make-and-use-xface/</link>
      <pubDate>Mon, 17 Feb 2025 01:23:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/how-to-make-and-use-xface/</guid>
      <description>&lt;p&gt;一开始是在 &lt;em&gt;emacs-china&lt;/em&gt; 上水论坛时，经常能看到像素极低、纯黑白的头像、却又很带感的头像。后来&lt;a href=&#34;https:emacs-china.org/t/topic/3118&#34;&gt;发现&lt;/a&gt;原来叫 &lt;code&gt;X-face&lt;/code&gt; ，大概是邮件／新闻组时代流行的头像。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;翻到 &lt;a href=&#34;https://blog.csdn.net/lujun9972/article/details/46002803&#34;&gt;DarkSun转的一篇老文章&lt;/a&gt;，提到了 &lt;a href=&#34;https://en.wikipedia.org/wiki/X-Face&#34;&gt;X-Face&lt;/a&gt; 这个邮件／新闻组时代很流行的东西。就和现在的 Gravatar 差不多。甚至以前的 IRC 也能显示 X-face 头像。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;code&gt;X-face&lt;/code&gt; 是邮件 header 部分嵌入的一段代码，在读入邮件时转换为 &lt;em&gt;48x48&lt;/em&gt; 的 bitmap。可以通过 &lt;a href=&#34;https://www.dairiki.org/xface/xface.php&#34;&gt;Online X-Face Converter&lt;/a&gt; 直接转换。然而，如果你的图片是彩色的、分辨率过高，直接转换的效果很不好。&lt;/p&gt;&#xA;&lt;p&gt;这里参考了 &lt;a href=&#34;https://emacs-china.org/t/x-face/28144&#34;&gt;emacs-china 上的一个教程&lt;/a&gt;，分享一下作为 &lt;code&gt;gimp&lt;/code&gt; 苦手的制作过程。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;图像-&amp;gt;模式-&amp;gt;灰度：将彩色的图片去色便于后续通过 &lt;strong&gt;阈值&lt;/strong&gt; 分割像素，当然最好用本来就是黑白的图片。&lt;/li&gt;&#xA;&lt;li&gt;颜色-&amp;gt;阈值：这一步将黑白像素分离，只要有线条即可，后续通过滤镜加粗线条。这里建议可以分图层处理，比如说眼睛部分和头发部分，往往当眼睛部分已经全为黑色像素时头发的线条还未区分。&lt;/li&gt;&#xA;&lt;li&gt;图像-&amp;gt;模式-&amp;gt;索引：将图片变为 &lt;em&gt;black and white pattle(1bit)&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;滤镜-&amp;gt;常规-&amp;gt;腐蚀：将线条加粗，一般需要多次使用这个滤镜。&lt;/li&gt;&#xA;&lt;li&gt;图像-&amp;gt;缩放：缩放为 48x48 ，插值方法一般不限。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;据 &lt;a href=&#34;https://emacs-china.org/t/x-face/28144/2&#34;&gt;LdBeth&lt;/a&gt;，x-face 没有确切的解码标准，甚至因为作者技术问题和导致仿造实现时出了偏差，有些实现是相互不兼容的，现在一般用 compface 这个具体实现。这里直接使用 &lt;em&gt;compface&lt;/em&gt; 提供的 &lt;code&gt;xbm2xface&lt;/code&gt; 脚本即可。或者直接使用 &lt;a href=&#34;https://www.dairiki.org/xface/xface.php&#34;&gt;Online X-Face Converter&lt;/a&gt; encode一下。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为-wanderlust-设置-x-face-邮件头&#34;&gt;为 WanderLust 设置 X-Face 邮件头&lt;/h2&gt;&#xA;&lt;p&gt;&lt;em&gt;WanderLust&lt;/em&gt; 自动读取 &lt;code&gt;~/.xface&lt;/code&gt; ，如果需要显示 X-Face 则需要额外的包，参考了 &lt;code&gt;doom emacs&lt;/code&gt; ，添加：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-elisp&#34; data-lang=&#34;elisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;;; Use x-face only when compface installed&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (when (modulep! +xface)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (&lt;span style=&#34;color:#a6e22e&#34;&gt;autoload&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-face-decode-message-header&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x-face-e21&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (setq wl-highlight-x-face-function &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x-face-decode-message-header&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;顺便一提， &lt;code&gt;Homebrew&lt;/code&gt; 目前不提供 &lt;code&gt;compface&lt;/code&gt; 这个包，这里参考 &lt;a href=&#34;https://www.linuxfromscratch.org/blfs/view/git/general/compface.html&#34;&gt;Linux® From Scratch&lt;/a&gt; 手动构建了这个程序。你可能需要：&lt;/p&gt;</description>
    </item>
    <item>
      <title>耶复活了</title>
      <link>http://localhost:1313/posts/hello-world-again/</link>
      <pubDate>Sat, 15 Feb 2025 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/hello-world-again/</guid>
      <description>&lt;p&gt;之前用 &lt;code&gt;hexo&lt;/code&gt; 构建的博客遗失了，目前先使用 &lt;code&gt;github pages&lt;/code&gt; + &lt;code&gt;hugo&lt;/code&gt; 构建博客。将来大概会用 &lt;code&gt;cloudflare pages&lt;/code&gt; + &lt;code&gt;org mode&lt;/code&gt; + 自己用 &lt;code&gt;elisp&lt;/code&gt; 写的博客引擎重构。&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;耶复活了。&lt;/del&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>&lt;p&gt;Written in Go, Hugo is an open source static site generator available under the &lt;a href=&#34;https://github.com/gohugoio/hugo/blob/master/LICENSE&#34;&gt;Apache Licence 2.0.&lt;/a&gt; Hugo supports TOML, YAML and JSON data file types, Markdown and HTML content files and uses shortcodes to add rich content. Other notable features are taxonomies, multilingual mode, image processing, custom output formats, HTML/CSS/JS minification and support for Sass SCSS workflows.&lt;/p&gt;&#xA;&lt;p&gt;Hugo makes use of a variety of open source projects including:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/yuin/goldmark&#34;&gt;https://github.com/yuin/goldmark&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/alecthomas/chroma&#34;&gt;https://github.com/alecthomas/chroma&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/muesli/smartcrop&#34;&gt;https://github.com/muesli/smartcrop&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;https://github.com/spf13/cobra&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;https://github.com/spf13/viper&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Hugo is ideal for blogs, corporate websites, creative portfolios, online magazines, single page applications or even a website with thousands of pages.&lt;/p&gt;</description>
    </item>
    <item>
      <title>My first post</title>
      <link>http://localhost:1313/blog/my-first-post/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/my-first-post/</guid>
      <description>&lt;p&gt;This is my post body&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
